# This is a basic workflow to help you get started with Actions

name: Auto-CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches:
  pull_request:
    branches: [ "master" ]
#  schedule:
#    - cron: '00 5 * * 6' # every Sunday at 5:00

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/get-latest-url.yml@main
      # Runs a set of commands using the runners shell
      - name: build container - AMD64
        env:
          ARCH: AMD64
        run: |
          LATEST_URL=$( cat latest_url-*$ARCH*.txt )
          echo "Latest URL: $LATEST_URL"
          [ -z "$LATEST_URL" ] && { echo "Latest url not found"; exit 1; }
          curl -L -o files/softether.tar.gz "$LATEST_URL"
          ls -hal files/softether.tar.gz
          SOFTETHER_VERSION=$( basename $LATEST_URL | sed "s@softether-vpnserver-@@g" | cut -f1-3 -d'-' )
          echo "Softether version: $SOFTETHER_VERSION"
          [ -z "$SOFTETHER_VERSION" ] && { echo "Softether version not defined"; exit 1; }
          echo -e "\n\nDockerfile:\n$( cat Dockerfile-$ARCH )\n\n"

          docker build --rm -t croc/softether -f Dockerfile-$ARCH .
          docker tag croc/softether croc/softether:$SOFTETHER_VERSION
      - name: setup buildx for arm build
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: build container - ARM 64bit
        env:
          ARCH: ARM
        run: |
          LATEST_URL=$( cat latest_url-*$ARCH*.txt )
          echo "Latest URL: $LATEST_URL"
          [ -z "$LATEST_URL" ] && { echo "Latest url not found"; exit 1; }
          curl -L -o files/softether.tar.gz "$LATEST_URL"
          ls -hal files/softether.tar.gz
          SOFTETHER_VERSION=$( basename $LATEST_URL | sed "s@softether-vpnserver-@@g" | cut -f1-3 -d'-' )
          echo "Softether version: $SOFTETHER_VERSION"
          [ -z "$SOFTETHER_VERSION" ] && { echo "Softether version not defined"; exit 1; }
          echo -e "\n\nDockerfile:\n$( cat Dockerfile-$ARCH )\n\n"

          docker build buildx --rm --platform linux/arm64 -t croc/softether-arm64 -f Dockerfile-$ARCH .
          docker tag croc/softether-arm64 croc/softether-arm64:$SOFTETHER_VERSION
#      - name: push container
#        env:
#          DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USER }}
#          DOCKERHUB_PASS: ${{ secrets.DOCKERHUB_PASS }}
#        run: |
#          docker images
#          echo $DOCKERHUB_USER | base64 -w0 -i
#          echo $DOCKERHUB_PASS | base64 -w0 -i
#          echo "$DOCKERHUB_PASS" | docker login --username=$DOCKERHUB_USER --password-stdin
#          docker push croc/onedrive